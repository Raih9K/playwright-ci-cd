name: Playwright CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [1, 2, 3]  # Run tests in 3 parallel shards

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Node.js Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      - name: Cache Playwright Browsers
        id: cache-playwright
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-

      - name: Install Playwright Browsers
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps

      - name: Check If Tests Should Run
        id: check-tests
        run: |
          if git diff --name-only HEAD^ HEAD | grep -qE '^tests/|^src/'; then
            echo "RUN_TESTS=true" >> $GITHUB_ENV
          else
            echo "RUN_TESTS=false" >> $GITHUB_ENV
          fi

      - name: Run Playwright Tests
        if: env.RUN_TESTS == 'true'
        run: npx playwright test --shard=${{ matrix.shard }}/3

      - name: Upload Playwright HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
